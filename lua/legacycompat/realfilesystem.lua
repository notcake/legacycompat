local self = {}LegacyCompat.RealFileSystem = LegacyCompat.MakeConstructor (self, LegacyCompat.IFileSystem)function self:ctor ()	self.BaseLuaPath        = "lua/"	self.BasePath           = ""	self.VirtualBaseLuaPath = nil	self.VirtualBasePath    = nilendfunction self:Exists (path, lua)	return file.Exists ((lua and self:GetBaseLuaPath () or self:GetBasePath ()) .. path, "GAME")endfunction self:Find (path, lua)	local files, folders = file.Find ((lua and self:GetBaseLuaPath () or self:GetBasePath ()) .. path, "GAME")	for	_, v in ipairs (folders) do		files [#files + 1] = v	end	return filesendfunction self:IsFolder (path, lua)	return file.IsDir ((lua and self:GetBaseLuaPath () or self:GetBasePath ()) .. path, "GAME")endfunction self:Read (path, lua)	return file.Read ((lua and self:GetBaseLuaPath () or self:GetBasePath ()) .. path, "GAME")endfunction self:ToString ()	return "[RealFileSystem: " .. self:GetBaseLuaPath () .. " -> " .. self:GetVirtualBaseLuaPath () .. "]"end